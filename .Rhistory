"4" = "Four-wheel",
"f" = "Front-wheel",
"r" = "Rear-wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
) +
theme_classic(
base_size = 10
) +
theme(
legend.position = c(0.8, 0.8),
legend.direction = "horizontal",
plot.title = element_text(color = "blue", face = "bold")
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_jitter(size = 2, aes(color = drv, shape = drv)) +
geom_smooth(color = "black") +
scale_y_continuous(
limits = c(5, 50),
breaks = c(10, 20, 30, 40),
expand = c(0, 0)
) +
scale_x_continuous(
limits = c(1, 7.5),
breaks = c(2, 3, 4, 5, 6, 7),
expand = c(0, 0)
) +
scale_color_manual(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
),
values = c(
"4" = "salmon",
"f" = "cornflowerblue",
"r" = "seagreen3"
)
) +
scale_shape_discrete(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
) +
theme_classic(base_size = 10) +
theme(
legend.position = c(0.9, 0,8)
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_jitter(size = 2, aes(color = drv, shape = drv)) +
geom_smooth(color = "black") +
scale_y_continuous(
limits = c(5, 50),
breaks = c(10, 20, 30, 40),
expand = c(0, 0)
) +
scale_x_continuous(
limits = c(1, 7.5),
breaks = c(2, 3, 4, 5, 6, 7),
expand = c(0, 0)
) +
scale_color_manual(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
),
values = c(
"4" = "salmon",
"f" = "cornflowerblue",
"r" = "seagreen3"
)
) +
scale_shape_discrete(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
) +
theme_classic(base_size = 10) +
theme(
legend.position = c(0.9, 0,8)
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_jitter(size = 2, aes(color = drv, shape = drv)) +
geom_smooth(color = "black") +
scale_y_continuous(
limits = c(5, 50),
breaks = c(10, 20, 30, 40),
expand = c(0, 0)
) +
scale_x_continuous(
limits = c(1, 7.5),
breaks = c(2, 3, 4, 5, 6, 7),
expand = c(0, 0)
) +
scale_color_manual(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
),
values = c(
"4" = "salmon",
"f" = "cornflowerblue",
"r" = "seagreen3"
)
) +
scale_shape_discrete(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_jitter(size = 2, aes(color = drv, shape = drv)) +
geom_smooth(color = "black") +
scale_y_continuous(
limits = c(5, 50),
breaks = c(10, 20, 30, 40),
expand = c(0, 0)
) +
scale_x_continuous(
limits = c(1, 7.5),
breaks = c(2, 3, 4, 5, 6, 7),
expand = c(0, 0)
) +
scale_color_manual(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
),
values = c(
"4" = "salmon",
"f" = "cornflowerblue",
"r" = "seagreen3"
)
) +
scale_shape_discrete(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
) +
theme_classic(
base_size = 10
) +
theme(
legend.position = c(0.8,0.8)
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_jitter(size = 2, aes(color = drv, shape = drv)) +
geom_smooth(color = "black") +
scale_y_continuous(
limits = c(5, 50),
breaks = c(10, 20, 30, 40),
expand = c(0, 0)
) +
scale_x_continuous(
limits = c(1, 7.5),
breaks = c(2, 3, 4, 5, 6, 7),
expand = c(0, 0)
) +
scale_color_manual(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
),
values = c(
"4" = "salmon",
"f" = "cornflowerblue",
"r" = "seagreen3"
)
) +
scale_shape_discrete(
breaks = c("r", "f", "4"),
labels = c(
"4" = "Four-Wheel",
"f" = "Front-Wheel",
"r" = "Rear-Wheel"
)
) +
labs(
x = "Engine displacement / size (L)",
y = "Highway fuel conomy (mpg)",
color = "Drivetrain",
shape = "Drivetrain",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Rear-wheel drive vehicles are often an exception due to sports cars' light weight",
caption = "Data from fuelsconomy.gov"
) +
theme_classic(
base_size = 10
) +
theme(
legend.position = c(0.8,0.8)
)
mpg2 <-
mpg %>%
filter(
cyl != 5,
drv %in% c("4", "f"),
class != "2seater"
)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_pint()
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 2)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 6)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "vertical")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "v")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl, labeller = label_both)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl, labeller = label_both)
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h", scales = "free")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h", scales = "fix")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h", scales = "fixed")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap( ~ class, ncol = 3, dir = "h", scales = "free_y")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl, labeller = label_both, scales = "free")
ggplot(mpg2, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl, labeller = label_both)
library(patchwork)
p1 <- ggplot(mpg, aes(x = displ)) + geom_histogram(bins = 10) +
labs(x = "Engine Displacement", y = NULL)
p2 <- ggplot(mpg, aes(x = hwy)) + geom_histogram(bins = 10) +
labs(x = "Highway MPG", y = NULL)
p3 <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point() +
labs(x = "Engine Displacement", y = "Highway MPG")
p4 <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_smooth() +
labs(x = "Engine Displacement", y = "Highway MPG")
(p1 + p2 ) / (p3 + p4)
p1 | p2
p1 | p2 | p3 / p4
p1 | p2 | (p3 / p4)
(p1 + p2 ) + plot_layout(nrow = 2)
p1 / p2
p1 + p2
p1 + p2 + plot_spacer()
((p1 / p2) | p3) + plot_layout(widths = c(1,2))
((p1 / p2) | p3) + plot_layout(widths = c(1, 2))
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
ggtitle(
label = "xyz"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_suffix = ")"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "1",
tag_suffix = "-a"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_suffix = "1"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "1",
tag_suffix = "a"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_prefix = "1"
tag_suffix = "a"
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_prefix = "1",
tag_suffix = "a"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_prefix = "1"
)
((p1 / p2) | p3) + plot_layout(widths = c(1, 2)) +
plot_annotation(
title = "overall title",
caption = "Data from xyz",
tag_levels = "a",
tag_prefix = "1-"
)
library(ordbetareg)
electors <- rbeta(1000, 232, 306)
electors <- rbeta(1000, 232, 306)
hist(electors)
electors <- rbeta(1000, 1, 306)
hist(electors)
dbeta(0.2, 2 , 3)
min(electors)
N <- seq(100, 10000, by = 10)
N
min_y_j <- sapply(N, function(n){
y_i <- seq(0, 1, length.out = n)
y_j <- (y_i * (n-1) + 0.5)/n
min(y_j)
})
max_y_j <- sapply(N, function(n){
y_i <- seq(0, 1, length.out =n)
y_j <- (y_i * (n-1) + 0.5)/n
max(y_j)
})
plot(N, mmin_y_j)
plot(N, min_y_j)
data(vdem)
library(vdem)
install.packages("vdem")
data("https://github.com/vdeminstitute/vdemdata/blob/master/data/vdem.RData")
githubURL <- "https://github.com/vdeminstitute/vdemdata/blob/master/data/vdem.RData"
load(url(githubURL))
library(tidyverse)
library(brms)
library(lme4)
library(nlme)
library(ordbetareg)
library(bayesplot)
library(easystats)
library(kableExtra)
library(kableExtra)
library(tidyverse)
library(brms)
library(lme4)
library(nlme)
library(ordbetareg)
library(bayesplot)
library(easystats)
library(kableExtra)
data_smart <- read.csv("Z:/Data/SmartIntakeQnA Data 2020-2021/Final Dataset/Data Analyses - DJ/DJ_MA_data_final_052423.csv")
model_overeating_hed <- ordbetareg(
formula = overeating ~ scale(per_hpf_within_dev) + scale(per_hpf_within_mean) + scale(hunger) + scale(per_hed_energy) + (1 + scale(per_hpf_within_dev) | Subject),
data = data_smart,
seed = 2023+05+20,
cores = 8,
chains = 8,
iter = 4000,
warmup = 2000,
control = list(adapt_delta = 0.95, max_treedepth = 12),
save_pars = save_pars(all = TRUE)
)
model_parameters(
model_overeating_hed,
centrality = "median",
ci = 0.95,
ci_method = "hdi",
test = "pd",
effects = "all"
)
install.packages('brmsfit')
library(brmsfit)
plot(marginal_effects(model_overeating_hed, "scaleper_hpf_within_dev"), ask = FALSE)
plot(marginal_effects(model_overeating_hed, "scaleper_hpf_within_dev"))
plot(marginal_effects(model_overeating_hed), ask = FALSE)
data_smart %>%
ggplot(aes(x = per_hpf_within_dev, overeating)) +
geom_point() + geom_smooth(method = "lm") +
scale_color_brewer(palette = "Set1") +
theme_bw(base_size = 14) +
ggtitle("Within-effect of %kcal from HPF") +
facet_wrap(~Subject)
data_smart %>%
ggplot(aes(x = per_hpf_within_dev, overeating)) +
geom_point() + geom_smooth(method = "lm") +
scale_color_brewer(
palette = "Set1") +
scale_y_continuous(
limits = c(0,100)
) +
theme_bw(base_size = 14) +
labs(
title = "Within-effect of %kcal from HPF across each participant",
subtitle = "To infer random slope"
) +
facet_wrap(~Subject)
git
git --version
library(usethis)
use_git_config(user.name = "Daiil Jun", user.email = "jdaiil@ku.edu")
install.packages('gert')
use_git_config(user.name = "Daiil Jun", user.email = "jdaiil@ku.edu")
